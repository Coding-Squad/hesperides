#!groovy

@Library(["rundeck@2.1.5", "toolbox-yaml"]) _

app = "HES"
node {
    platformsList = String.join("\n", toolbox.getEnvironments(app))
}
pipeline {
    agent {
        node {
            label 'default||master'
        }
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }
    stages {
        stage('Initialisation des Paramètres') {
            input {
                message "Paramètres de déploiement"
                ok "OK"
                parameters {
                    choice(choices: platformsList, name: "PLATFORM", description: "OBLIGATOIRE : Plateforme sur laquelle sera fait le déploiement")
                }
            }
            steps {
                script {
                    // Set params as they will be used later
                    platform = PLATFORM
                    dockers = horsprodtoolbox.yPath("/${app}/${platform}/DOCKER")
                    dockersJson = readJSON text: "${dockers}"
                }
            }
        }
        stage('Deploy docker image') {
            steps {
                script {
                    int index = 0
                    print dockersJson
                    print dockersJson['result']
                    print dockersJson['result'][0]
                    print dockersJson['result'][0]['HOSTS']
                    print dockersJson['result'][0]['HOSTS'][0]
                    /*for (docker in dockersJson) {
                        for (host in dockersJson[index]['HOSTS']) {
                            /*Map optionsRundeck = [
                                    refresh_puppet_agent: "Complet",
                                    serveur             : [host['name']]
                            ]
                            devrundeck.startAndWaitWithAutofill("HES", "Outils/refresh_puppet_agent", optionsRundeck)
                        }
                        index++
                    }*/

                }
            }
        }
        stage('Restart docker image') {
            steps {
                script {
                    Map optionsRundeck = [
                            composant  : "DOCKER-dockerregistry.socrate.vsct.fr/hesperides/hesperides:feature_springboot",
                            instances  : "HESA11DCK",
                            trigramme  : app,
                            techno     : "DOCKER",
                            TargetNodes: "HESREL1DOCKERdockerregistry.socrate.vsct.fr/hesperides/hesperides:feature_springboot-CIAOBABY",
                            plateforme : platform,
                            serveur    : "ciaobaby",


                    ]
                    devrundeck.startAndWaitWithAutofill("HES", "Outils/RESTART", optionsRundeck)
                }
            }
        }
    }
    post {
        always {
            deleteDir()
        }
    }
}
